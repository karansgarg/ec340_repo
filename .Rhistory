glimpse(hsbc_ts)
hsbc_ts <- ImputeMissing(hsbc_ts)
hsbc_tib <- as_tibble(hsbc_ts)
head(hsbc_tib)
ImputeMissing <- function(ts, start_date=as.Date("2014-2-21"), finish_date=as.Date("2021-5-4")){
df <- data.frame(df=as.matrix(ts), date=time(ts))
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
#      print("success")
#      print(ts[i])
}
}
ts_new <- as.ts(df, start=start_date, end=finish_date, frequency=365, names=c("Price", "Date"))
return(ts_new)
}
#First we download the data from Quandl
Quandl.api_key('rTCfeqfv2pbfQG-uk-af')
hsbc_tib <- Quandl('HKEX/00005', column_index = "1") %>%
as_tsibble(index="Date")
names(hsbc_tib)[2] <- "Price"
hsbc_ts <- as.ts(hsbc_tib) #Both tibbles and timeseries objects will be useful for analysis
hsbc_ts <- ImputeMissing(hsbc_ts)
hsbc_tib <- as_tibble(hsbc_ts)
head(hsbc_tib)
#First we download the data from Quandl
#The data is imported as both a tibble and a timeseries object, as both will be useful for analysis
Quandl.api_key('rTCfeqfv2pbfQG-uk-af')
hsbc_tib <- Quandl('HKEX/00005', column_index = "1") %>%
as_tsibble(index="Date")
names(hsbc_tib)[2] <- "Price"
dates <- seq(as.Date("2014-02-21"), as.Date("2021-05-04"), by = "day")
hsbc_ts <- as.ts(hsbc_tib, start = c(2014, as.numeric(format(inds[1], "%j"))), frequency=365)
glimpse(hsbc_tib)
glimpse(hsbc_ts)
ImputeMissing <- function(ts, start_date=as.Date("2014-2-21"), finish_date=as.Date("2021-5-4")){
df <- data.frame(df=as.matrix(ts), date=time(ts))
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
#      print("success")
#      print(ts[i])
}
}
ts_new <- as.ts(df, names=c("Price", "Date"))
return(ts_new)
}
hsbc_ts <- ImputeMissing(hsbc_ts)
hsbc_tib <- as_tibble(hsbc_ts)
head(hsbc_tib)
head(hsbc_ts)
#First we download the data from Quandl
#The data is imported as both a tibble and a timeseries object, as both will be useful for analysis
Quandl.api_key('rTCfeqfv2pbfQG-uk-af')
hsbc_tib <- Quandl('HKEX/00005', column_index = "1") %>%
as_tsibble(index="Date")
names(hsbc_tib)[2] <- "Price"
dates <- seq(as.Date("2014-02-21"), as.Date("2021-05-04"), by = "day")
hsbc_ts <- as.ts(hsbc_tib, start = c(2014, as.numeric(format(inds[1], "%j"))), frequency=365)
glimpse(hsbc_tib)
glimpse(hsbc_ts)
head(hsbc_tib)
head(hsbc_ts)
data.frame(hsbc_ts)
ImputeMissing <- function(ts, start_date=as.Date("2014-2-21"), finish_date=as.Date("2021-5-4")){
df <- data.frame(ts)
for(i in 1:nrow(df)){
if(is.na(df[i, 1)){
ImputeMissing <- function(ts, start_date=as.Date("2014-2-21"), finish_date=as.Date("2021-5-4")){
df <- data.frame(ts)
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
}
}
ts_new <- as.ts(df,
start = c(2014, as.numeric(format(inds[1], "%j"))),
frequency=365,
names=c("Price", "Date"))
return(ts_new)
}
hsbc_ts <- ImputeMissing(hsbc_ts)
hsbc_tib <- as_tibble(hsbc_ts)
head(hsbc_ts)
ImputeMissing <- function(ts, start_date=as.Date("2014-2-21"), finish_date=as.Date("2021-5-4")){
df <- data.frame(ts)
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
}
}
df <- cbind(df, inds)
ts_new <- as.ts(df,
start = c(2014, as.numeric(format(inds[1], "%j"))),
frequency=365,
names=c("Price", "Date"))
return(ts_new)
}
#First we download the data from Quandl
#The data is imported as both a tibble and a timeseries object, as both will be useful for analysis
Quandl.api_key('rTCfeqfv2pbfQG-uk-af')
hsbc_tib <- Quandl('HKEX/00005', column_index = "1") %>%
as_tsibble(index="Date")
names(hsbc_tib)[2] <- "Price"
dates <- seq(as.Date("2014-02-21"), as.Date("2021-05-04"), by = "day")
hsbc_ts <- as.ts(hsbc_tib, start = c(2014, as.numeric(format(inds[1], "%j"))), frequency=365)
glimpse(hsbc_tib)
glimpse(hsbc_ts)
head(hsbc_tib)
head(hsbc_ts)
ImputeMissing <- function(ts, start_date=as.Date("2014-2-21"), finish_date=as.Date("2021-5-4")){
df <- data.frame(ts)
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
}
}
df <- cbind(df, inds)
ts_new <- as.ts(df,
start = c(2014, as.numeric(format(inds[1], "%j"))),
frequency=365,
names=c("Price", "Date"))
return(ts_new)
}
hsbc_ts <- ImputeMissing(hsbc_ts)
ImputeMissing <- function(ts, start_date=as.Date("2014-2-21"), finish_date=as.Date("2021-5-4")){
df <- data.frame(ts)
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
}
}
df <- cbind(df, dates)
ts_new <- as.ts(df,
start = c(2014, as.numeric(format(inds[1], "%j"))),
frequency=365,
names=c("Price", "Date"))
return(ts_new)
}
hsbc_ts <- ImputeMissing(hsbc_ts)
#First we download the data from Quandl
#The data is imported as both a tibble and a timeseries object, as both will be useful for analysis
Quandl.api_key('rTCfeqfv2pbfQG-uk-af')
hsbc_tib <- Quandl('HKEX/00005', column_index = "1") %>%
as_tsibble(index="Date")
names(hsbc_tib)[2] <- "Price"
dates <- seq(as.Date("2014-02-21"), as.Date("2021-05-05"), by = "day")
hsbc_ts <- as.ts(hsbc_tib, start = c(2014, as.numeric(format(inds[1], "%j"))), frequency=365)
hsbc_ts <- ImputeMissing(hsbc_ts)
hsbc_tib <- as_tibble(hsbc_ts)
head(hsbc_ts)
data.frame(hsbc_ts)
head(hsbc_tib)
hsbc_visual <- hsbc_tib %>%
ggplot(aes(Date, Price)) +
geom_line() +
theme_minimal() +
labs(title = "HSBC Stock Price", x = "Year", y = "Price")
#print(hsbc_visual)
hsbc_visual <- hsbc_tib %>%
ggplot(aes(Date, Price)) +
geom_line() +
theme_minimal() +
labs(title = "HSBC Stock Price", x = "Year", y = "Price")
print(hsbc_visual)
ImputeMissing <- function(ts, start_date=as.Date("2014-2-21"), finish_date=as.Date("2021-5-4")){
df <- data.frame(ts)
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
}
}
df <- cbind(df, dates)
ts_new <- as.ts(df,
start = c(2014, as.numeric(format(inds[1], "%j"))),
frequency=365,
names=c(Price, Date))
return(ts_new)
}
#First we download the data from Quandl
#The data is imported as both a tibble and a timeseries object, as both will be useful for analysis
Quandl.api_key('rTCfeqfv2pbfQG-uk-af')
hsbc_tib <- Quandl('HKEX/00005', column_index = "1") %>%
as_tsibble(index="Date")
names(hsbc_tib)[2] <- "Price"
dates <- seq(as.Date("2014-02-21"), as.Date("2021-05-05"), by = "day")
hsbc_ts <- as.ts(hsbc_tib, start = c(2014, as.numeric(format(inds[1], "%j"))), frequency=365)
hsbc_ts <- ImputeMissing(hsbc_ts)
hsbc_tib <- as_tibble(hsbc_ts)
head(hsbc_tib)
head(hsbc_ts)
head(hsbc_ts)
ImputeMissing <- function(ts, start_date=as.Date("2014-2-21"), finish_date=as.Date("2021-5-4")){
df <- data.frame(ts)
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
}
}
df <- cbind(df, dates)
ts_new <- as.ts(df,
start = c(2014, as.numeric(format(inds[1], "%j"))),
frequency=365,
colnames=c(Price, Date))
return(ts_new)
}
hsbc_ts <- ImputeMissing(hsbc_ts)
hsbc_tib <- as_tibble(hsbc_ts)
head(hsbc_ts)
ImputeMissing <- function(ts){
df <- data.frame(ts)
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
}
}
df <- cbind(df, dates)
ts_new <- as.ts(df,
start = c(2014, as.numeric(format(inds[1], "%j"))),
frequency=365,
names=c(Price, Date))
return(ts_new)
}
#First we download the data from Quandl
#The data is imported as both a tibble and a timeseries object, as both will be useful for analysis
Quandl.api_key('rTCfeqfv2pbfQG-uk-af')
hsbc_tib <- Quandl('HKEX/00005', column_index = "1") %>%
as_tsibble(index="Date")
names(hsbc_tib)[2] <- "Price"
dates <- seq(as.Date("2014-02-21"), as.Date("2021-05-05"), by = "day")
hsbc_ts <- as.ts(hsbc_tib, start = c(2014, as.numeric(format(inds[1], "%j"))), frequency=365)
glimpse(hsbc_tib)
glimpse(hsbc_ts)
head(hsbc_tib)
head(hsbc_ts)
has_gaps(hsbc_tib)
colSums(is.na(hsbc_tib[, "Price"]))
data.frame(hsbc_ts)
cbind(data.frame(hsbc_ts), dates)
#First we download the data from Quandl
#The data is imported as both a tibble and a timeseries object, as both will be useful for analysis
Quandl.api_key('rTCfeqfv2pbfQG-uk-af')
hsbc_tib <- Quandl('HKEX/00005', column_index = "1") %>%
as_tsibble(index="Date")
names(hsbc_tib)[2] <- "Price"
dates <- seq(as.Date("2014-02-21"), as.Date("2021-05-05"), by = "day")
hsbc_ts <- as.ts(hsbc_tib, start = c(2014, as.numeric(format(dates[1], "%j"))), frequency=365)
ImputeMissing <- function(ts){
df <- data.frame(ts)
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
}
}
df <- cbind(df, dates)
ts_new <- as.ts(df,
start = c(2014, as.numeric(format(dates[1], "%j"))),
frequency=365,
names=c(Price, Date))
return(ts_new)
}
hsbc_ts <- ImputeMissing(hsbc_ts)
hsbc_tib <- as_tibble(hsbc_ts)
head(hsbc_ts)
ImputeMissing <- function(ts){
df <- data.frame(ts)
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
}
}
df <- cbind(df, dates)
names(df)[1] <- "Price"
names(df)[2] <- "Date"
ts_new <- as.ts(df,
start = c(2014, as.numeric(format(dates[1], "%j"))),
frequency=365)
return(ts_new)
}
hsbc_ts <- ImputeMissing(hsbc_ts)
hsbc_tib <- as_tibble(hsbc_ts)
head(hsbc_ts)
#First we download the data from Quandl
#The data is imported as both a tibble and a timeseries object, as both will be useful for analysis
Quandl.api_key('rTCfeqfv2pbfQG-uk-af')
hsbc_tib <- Quandl('HKEX/00005', column_index = "1") %>%
as_tsibble(index="Date")
names(hsbc_tib)[2] <- "Price"
dates <- seq(as.Date("2014-02-21"), as.Date("2021-05-05"), by = "day")
hsbc_ts <- as.ts(hsbc_tib, start = c(2014, as.numeric(format(dates[1], "%j"))), frequency=365)
ImputeMissing <- function(ts){
df <- data.frame(ts)
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
}
}
df <- cbind(df, dates)
names(df)[1] <- "Price"
names(df)[2] <- "Date"
ts_new <- as.ts(df,
start = c(2014, 32),
frequency=365)
return(ts_new)
}
#First we download the data from Quandl
#The data is imported as both a tibble and a timeseries object, as both will be useful for analysis
Quandl.api_key('rTCfeqfv2pbfQG-uk-af')
hsbc_tib <- Quandl('HKEX/00005', column_index = "1") %>%
as_tsibble(index="Date")
names(hsbc_tib)[2] <- "Price"
dates <- seq(as.Date("2014-02-21"), as.Date("2021-05-05"), by = "day")
hsbc_ts <- as.ts(hsbc_tib, start = c(2014, as.numeric(format(dates[1], "%j"))), frequency=365)
hsbc_ts <- ImputeMissing(hsbc_ts)
hsbc_tib <- as_tibble(hsbc_ts)
head(hsbc_ts)
cbind(data.frame(hsbc_ts), dates)
ImputeMissing <- function(ts){
df <- data.frame(ts)
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
}
}
df <- cbind(df, dates)
names(df)[1] <- "Price"
names(df)[2] <- "Date"
ts_new <- as.ts(df)
#                  start = c(2014, 32),
#                  frequency=365)
return(ts_new)
}
#First we download the data from Quandl
#The data is imported as both a tibble and a timeseries object, as both will be useful for analysis
Quandl.api_key('rTCfeqfv2pbfQG-uk-af')
hsbc_tib <- Quandl('HKEX/00005', column_index = "1") %>%
as_tsibble(index="Date")
names(hsbc_tib)[2] <- "Price"
dates <- seq(as.Date("2014-02-21"), as.Date("2021-05-05"), by = "day")
hsbc_ts <- as.ts(hsbc_tib, start = c(2014, as.numeric(format(dates[1], "%j"))), frequency=365)
hsbc_ts <- ImputeMissing(hsbc_ts)
hsbc_tib <- as_tibble(hsbc_ts)
head(hsbc_ts)
ImputeMissing <- function(ts){
df <- data.frame(ts)
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
}
}
dates_formatted <- dates
for(d in dates_formatted){
as.Date(d)
}
df <- cbind(df, dates_formatted)
names(df)[1] <- "Price"
names(df)[2] <- "Date"
ts_new <- as.ts(df)
#                  start = c(2014, 32),
#                  frequency=365)
return(ts_new)
}
hsbc_ts <- ImputeMissing(hsbc_ts)
hsbc_tib <- as_tibble(hsbc_ts)
head(hsbc_ts)
ImputeMissing <- function(ts){
df <- data.frame(ts)
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
}
}
dates_formatted <- dates
for(d in dates_formatted){
d <- as.Date(d)
}
df <- cbind(df, dates_formatted)
names(df)[1] <- "Price"
names(df)[2] <- "Date"
ts_new <- as.ts(df)
#                  start = c(2014, 32),
#                  frequency=365)
return(ts_new)
}
hsbc_ts <- ImputeMissing(hsbc_ts)
hsbc_tib <- as_tibble(hsbc_ts)
head(hsbc_ts)
length(dates)
ImputeMissing <- function(ts){
df <- data.frame(ts)
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
}
}
dates_formatted <- dates
for(i in 1:length(dates)){
dates[i] <- as.Date(dates[i])
}
df <- cbind(df, dates_formatted)
names(df)[1] <- "Price"
names(df)[2] <- "Date"
ts_new <- as.ts(df)
#                  start = c(2014, 32),
#                  frequency=365)
return(ts_new)
}
hsbc_ts <- ImputeMissing(hsbc_ts)
hsbc_tib <- as_tibble(hsbc_ts)
head(hsbc_ts)
data.frame(dates)
#First we download the data from Quandl
#The data is imported as both a tibble and a timeseries object, as both will be useful for analysis
Quandl.api_key('rTCfeqfv2pbfQG-uk-af')
hsbc_tib <- Quandl('HKEX/00005', column_index = "1") %>%
as_tsibble(index="Date")
names(hsbc_tib)[2] <- "Price"
dates <- seq(as.Date("2014-02-21"), as.Date("2021-05-05"), by = "day")
hsbc_ts <- as.ts(hsbc_tib, start = c(2014, as.numeric(format(dates[1], "%j"))), frequency=365)
ImputeMissing <- function(ts){
df <- data.frame(ts)
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
}
}
dates_formatted <- data.frame(dates)
df <- cbind(df, dates_formatted)
names(df)[1] <- "Price"
names(df)[2] <- "Date"
ts_new <- as.ts(df)
#                  start = c(2014, 32),
#                  frequency=365)
return(ts_new)
}
hsbc_ts <- ImputeMissing(hsbc_ts)
hsbc_tib <- as_tibble(hsbc_ts)
head(hsbc_ts)
#First we download the data from Quandl
#The data is imported as both a tibble and a timeseries object, as both will be useful for analysis
Quandl.api_key('rTCfeqfv2pbfQG-uk-af')
hsbc_tib <- Quandl('HKEX/00005', column_index = "1") %>%
as_tsibble(index="Date")
names(hsbc_tib)[2] <- "Price"
dates <- seq(as.Date("2014-02-21"), as.Date("2021-05-05"), by = "day")
hsbc_ts <- as.ts(hsbc_tib, start = c(2014, as.numeric(format(dates[1], "%j"))), frequency=365)
ImputeMissing <- function(ts){
df <- data.frame(ts)
for(i in 1:nrow(df)){
if(is.na(df[i, 1])){
df[i, 1] <- df[i-1, 1]
}
}
dates_formatted <- data.frame(dates)
df <- cbind(df, dates_formatted)
names(df)[1] <- "Price"
names(df)[2] <- "Date"
tib_new <- as_tsibble(df)
#                  start = c(2014, 32),
#                  frequency=365)
return(tib_new)
}
hsbc_tib <- ImputeMissing(hsbc_ts)
hsbc_ts <- as.ts(hsbc_tib, start = c(2014, as.numeric(format(dates[1], "%j"))), frequency=365)
head(hsbc_ts)
head(hsbc_ts)
head(hsbc_tib)
hsbc_visual <- hsbc_tib %>%
ggplot(aes(Date, Price)) +
geom_line() +
theme_minimal() +
labs(title = "HSBC Stock Price", x = "Year", y = "Price")
print(hsbc_visual)
adf.test(hsbc_tib$Price)
hsbc_log_diff <- hsbc_ts %>%
log() %>%
diff(1)
head(hsbc_log_diff)
plot(hsbc_ts)
plot(hsbc_log_diff)
hsbc_matrix <- embed(hsbc_log_diff, 21)
print(hsbc_matrix)
print(hsbc_matrix)
adf.test(hsbc_log_diff)
hsbc_lagged <- embed(hsbc_log_diff, 22)
rm(ts_test)
split_num <- round(nrow(hsbc_lagged)*0.7)
hsbc_train <- hsbc_lagged[1: split_num, ]
hsbc_test <- hsbc_lagged[split_num+1:nrow(hsbc_lagged), ]
split_num <- round(nrow(hsbc_lagged)*0.7)
hsbc_train <- hsbc_lagged[1: split_num, ]
hsbc_test <- hsbc_lagged[split_num + 1:nrow(hsbc_lagged), ]
split_num <- round(nrow(hsbc_lagged)*0.7)
hsbc_train <- hsbc_lagged[1: split_num, ]
hsbc_test <- hsbc_lagged[split_num:nrow(hsbc_lagged), ]
X_train <- hsbc_train[, -1]
y_train <- hsbc_train[, 1]
X_test <- hsbc_test[, -1]
y_test <- hsbc_test[, 1]
split_num <- round(nrow(hsbc_lagged)*0.7)
hsbc_train <- hsbc_lagged[1: split_num, ]
hsbc_test <- hsbc_lagged[(split_num+1):nrow(hsbc_lagged), ]
X_train <- hsbc_train[, -1]
y_train <- hsbc_train[, 1]
X_test <- hsbc_test[, -1]
y_test <- hsbc_test[, 1]
linear <- lm(y_train ~ X_train)
summary(linear)
linear_predicted <- predict(linear, X_test)
linear_predicted <- predict(linear, newdata = X_test)
linear_predicted <- predict(linear, newdata = fata.frame(X_test))
linear_predicted <- predict(linear, newdata = data.frame(X_test))
